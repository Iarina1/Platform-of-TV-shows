link github: https://github.com/Iarina1/Tema-POO-2020

In main imi creez ArrayList de filme, seriale, videoclipuri(filme + seriale) si utilizatori. In functie de parametri
primiti, apelez fct respective.

1.Comenzi
    1.1.Favorite
        Metoda pentru aceasta comanda este implementata in clasa User si in cadrul ei verific sa nu fie nevizionat
        videoclipul si sa nu fie deja in favorite;
    1.2.View
         Metoda pentru aceasta comanda este implementata in clasa User si actualizeaza campul history;
    1.3.Rating
         Exista cate o metoda pt movies (in clasa Movies) si pt serials (in clasa Serials).
            1.3.1.Movie
                In metoda getRating verific sa nu fi fost deja notat de user-ul respectiv si sa fie in
                campul history al user-ului. De asemenea, se adapteaza campul average din clasa Movie,
                ce reprezinta media tuturor notelor primite.
            1.3.2.Serial
                In metoda getRating verific sa nu fi fost deja notat de user-ul respectiv si sa fie in
                campul history al user-ului. De asemenea, se adapteaza campul average din clasa Serial,
                ce reprezinta media tuturor notelor primite pentru fiecare sezon si pe tot serialul.
                Pentru asta ma folosesc de un LinkedHashMap cu cheia un Integer (nr sezonului) si
                valoarea un ArrayList de Double unde pe prima pozitie pastrez suma tuturor notelor,
                pe a 2a pozitie nr de note date si pe a 3a media sezonului. In plus setez campul average
                al clasei Serial, ce reprezinta nota serialului.

2.Query
    2.1.Actori
        2.1.1.Average
            Pentru sortare ma folosesc de Collection.sort si im creez un comparator care sa respecte
            criteriile. Pentru implementarea metodei ma folosesc de un LinkedHashMap in care pastrez numele actorului si
            media. Pentru calcularea mediei ma folosesc de campul average al videoclipurilor in care au jucat.
        2.1.2.Awards
            Pentru sortare ma folosesc de Collection.sort si im creez un comparator care sa respecte
            criteriile. Pentru implementarea metodei ma folosesc de un LinkedHashMap in care pastrez numele actorului si
            nr de premii. Ma asigur ca pastrez doar actorii care au toate premiile.
        2.1.3.Filter Description
            Ma folosesc de regex pt a desparti textul in cuvinte, pe care le pastrez intr-un String[]. Pastrez doar
            actorii in descrierea carora apar toate cuv si dupa aceea fac sortarea.
    2.2.Video
        2.2.1.Rating
            Prelucrez serialele si filme ca sa respecte filtrele primite.
            Ma folosesc de campul average din clasa movie/serial pe care il calculez cum am descris mai sus pentru a face
            sortarea. Valorile de mai sus sunt pastrate intr-un LinkedHashMap.
        2.2.2.Favorite
            Prelucrez serialele si filme ca sa respecte filtrele primite.
            Numar de cate ori apare un serial in lista de fav a utilizatorilor si daca nr este 0 ignor serialul/filmul,
            altfel il adaug intr-un LinkedHahMap in care cheia e numele si val e nr de aparitii. Dupa aceea fac sortarea.
        2.2.3.Longest
            Prelucrez serialele si filme ca sa respecte filtrele primite.
            Sortez filmele/serialele cu ajutorul campului duration(pt filme este in imput, pt seriale il calculez). Valorile
            serial/film - durata le pastrez intr-un LinkedHashMap.
        2.2.4.Most Viewed
            Prelucrez serialele si filme ca sa respecte filtrele primite. Ma folosesc de metoda getSortedShow din clasa
            Show pentru a face sortarea. In aceasta metoda am un LinkedHashMap in care pastrez titlul si nr de vizualizari.
    2.3.Users
            Ma fol de campul nrRatings calculat mai sus din clasa User pentru a face sortarea dorita.

3.Recommendation
    3.1.Standard
            Metoda statica implementata in clasa User; returnez primul videoclipul care nu e in history.
    3.2.Best unseen
            Metoda statica implementata in clasa User; returnez primul videoclipul care nu e in history dupa
            ce ordonez videoclipurile. Pentru sortare ma fol de campul average.
    Pentru urmatoarele verific daca user-ul este premium sau nu.
    3.3.Popular
            Metoda statica implementata in clasa User; am un LinkedHashMap in care genul e cheia (String)
            si valoarea este suma duratelor videoclipurilor din genul respectiv (pentru a lua fiecare durata ma fol de
            campul history al lui user).
    3.4.Favorite
            Metoda statica implementata in clasa User; am un LinkedHashMap in care titlul e cheia
            si valoarea este nr de aparitii in lista de fav a user-ilor(ma folosesc de campul favoriteShow).
    3.5.Search
            Metoda statica implementata in clasa User; am un LinkedHashMap in care titlul e cheia
            si valoarea este nota din campul average. Am un ArrayList in care pastrez numele tuturor filmelor/serialelor.
            Il sortez si returnez primul film/serial din acest arraylist care respecta conditiile.




